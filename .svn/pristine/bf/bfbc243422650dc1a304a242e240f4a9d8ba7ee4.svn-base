package views;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;

import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;

import model.GraphSlot;
import Command.CommandManager;
import dialogs.GraphSlotContentViewer;
import elements.Element;

public class GraphSlotViewer extends JPanel implements Observer {
	private GraphSlot graphSlot;
	ArrayList<GraphSlotViewer> graphSlotViewers = new ArrayList();
	private CommandManager commandManager=new CommandManager();


	public GraphSlotViewer(GraphSlot graphSlot) {
		super(new BorderLayout());

		this.setGraphSlot(graphSlot);

		TitledBorder title = BorderFactory.createTitledBorder(graphSlot
				.toString());
		title.setTitlePosition(4);
		setBorder(title);
		addMouseListener(new Dvoklik());
		setBackground(Color.WHITE);

		GraphSlotViewerFramework slotViewerFramework = new GraphSlotViewerFramework();
		slotViewerFramework.setBackground(Color.WHITE);
		add(slotViewerFramework,"Center");
		
	}

	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
	}

	@Override
	public void update(Observable o, Object arg) {
		// TODO Auto-generated method stub

	}

	public void addGraphSlotViewer(GraphSlotViewer graphSlotViewer) {
		this.graphSlotViewers.add(graphSlotViewer);
		update(null, null);
	}

	public GraphSlot getGraphSlot() {
		return graphSlot;
	}

	public void setGraphSlot(GraphSlot graphSlot) {
		this.graphSlot = graphSlot;
	}

	public class Dvoklik extends MouseAdapter {

		@Override
		public void mouseClicked(MouseEvent e) {
			if (e.getClickCount() == 2) {
				GraphSlotViewer.this.graphSlot.setDesignMode(true);
				
				GraphSlotContentViewer slotContentViewer = new GraphSlotContentViewer(
						(GraphSlot) GraphSlotViewer.this.graphSlot);
				slotContentViewer.setVisible(true);
			}

		}

	}

	class GraphSlotViewerFramework extends JPanel {
		GraphSlotViewerFramework() {
		}

		protected void paintComponent(Graphics g) {
			super.paintComponent(g);

			Graphics2D g2 = (Graphics2D) g;
			for (int i = 0; i < GraphSlotViewer.this.graphSlot.getChildCount(); i++) {
				Element element = (Element) GraphSlotViewer.this.graphSlot
						.getChildAt(i);
				g2.setColor(Color.BLACK);

				g2.setStroke(element.getStroke());
				g2.draw(element.getShape());
				g2.setPaint(element.getPaint());
				g2.fill(element.getShape());
			}
		}
	}
	public GraphSlotViewer getGraphSlotViewerForslot(GraphSlot graph) {
		GraphSlotViewer graphSlotViewer = null;
		for (GraphSlotViewer graphSlotViewerTemp : this.graphSlotViewers) {
			if (graphSlotViewerTemp.getGraphSlot().equals(graph)) {
				graphSlotViewer = graphSlotViewerTemp;
				break;
			}
		}
		return graphSlotViewer;
	}

	public CommandManager getCommandManager() {
		return commandManager;
	}

	public void setCommandManager(CommandManager commandManager) {
		this.commandManager = commandManager;
	}

	

}
