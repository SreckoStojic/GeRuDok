package actions;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;

import javax.swing.AbstractAction;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.tree.MutableTreeNode;
import javax.swing.tree.TreePath;

import mainFrame.MainFrame;
import model.Document;
import model.Project;

public class NewDocument extends AbstractAction implements ActionListener {
	public NewDocument()
	  {
	    putValue("SmallIcon", loadIcon("images/new-document.png"));
	    putValue("Name", "New Document");
	    putValue("ShortDescription", "New Document");
	   
	  }
	 public Icon loadIcon(String fileName)
	  {
	    URL imageURL = getClass().getClassLoader().getResource(fileName);
	    Icon icon = null;
	    if (imageURL != null) {
	      icon = new ImageIcon(imageURL);
	    } else {
	      System.err.println("Resource not found: " + fileName);
	    }
	    return icon;
	  }

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		if (MainFrame.getInstance().getTree().getSelectionPath() != null){
			MutableTreeNode node = (MutableTreeNode)MainFrame.getInstance().getTree().getSelectionPath().getLastPathComponent();
			
			if ((node instanceof Project)){
				Project project = (Project)node;
				Document document = new Document(project, "Document " + (node.getChildCount()+1));
				node.insert(document, node.getChildCount());
				MainFrame.getInstance().getTree().updateUI();
			
			
			
			}
		}
		
		
	
	}

}
