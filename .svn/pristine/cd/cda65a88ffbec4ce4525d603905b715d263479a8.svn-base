package actions;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.URL;

import javax.swing.AbstractAction;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.KeyStroke;
import javax.swing.tree.DefaultTreeModel;

import mainFrame.MainFrame;
import model.Project;
import model.Workspace;
import serialization.ProjectFileFilter;

public class OpenProject extends AbstractAction {

	private ObjectInputStream os;

	{
		putValue("SmallIcon", loadIcon("images/open.png"));
		putValue("Name", "Open Project");
		putValue("ShortDescription", "Open project");
		putValue(ACCELERATOR_KEY,
				KeyStroke.getKeyStroke(KeyEvent.VK_O, ActionEvent.CTRL_MASK));

	}

	public Icon loadIcon(String fileName) {
		URL imageURL = getClass().getClassLoader().getResource(fileName);
		Icon icon = null;
		if (imageURL != null) {
			icon = new ImageIcon(imageURL);
		} else {
			System.err.println("Resource not found: " + fileName);
		}
		return icon;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		JFileChooser jfc = new JFileChooser();
		jfc.setFileFilter(new ProjectFileFilter());

		if (jfc.showOpenDialog(MainFrame.getInstance()) == JFileChooser.APPROVE_OPTION) {
			try {
				os = new ObjectInputStream(new FileInputStream(
						jfc.getSelectedFile()));

				Project p = null;
				try {
					p = (Project) os.readObject();
				} catch (ClassNotFoundException e2) {
					// TODO Auto-generated catch block
					e2.printStackTrace();
				}

				// ProjectViewer prviewer = new ProjectViewer(p);

				// MainFrame.getInstance().getDesktopPane().add(prviewer);
				Workspace workspace = (Workspace) MainFrame.getInstance()
						.getTree().getModel().getRoot();

				workspace.openProject(p, workspace.getChildCount()); // pozim
																		// metode
																		// iz
																		// modela

				((DefaultTreeModel) MainFrame.getInstance().getTree()
						.getModel()).reload();

			} catch (FileNotFoundException e1) {
				e1.printStackTrace();
			} catch (IOException e1) {
				e1.printStackTrace();
			}

		}
	}
}
